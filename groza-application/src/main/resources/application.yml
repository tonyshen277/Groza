# Device communication protocol parameters
http:
  request_timeout: 60000
# MQTT server parameters

#JWT Token parameters
security.jwt:
  tokenExpirationTime: "${JWT_TOKEN_EXPIRATION_TIME:900}" # Number of seconds (15 mins)
  refreshTokenExpTime: "${JWT_REFRESH_TOKEN_EXPIRATION_TIME:3600}" # Seconds (1 hour)
  tokenIssuer: "${JWT_TOKEN_ISSUER: grozacloud.com}"
  tokenSigningKey: "${JWT_TOKEN_SIGNING_KEY:grozaDefaultSigningKey}"

mqtt:
  # Enable/disable mqtt transport protocol.
  enabled: true
  bind_address: 0.0.0.0
  bind_port: 1883
  adaptor: JsonMqttAdaptor
  timeout: 10000
  netty:
    leak_detector_level: DISABLED
    boss_group_thread_count: 1
    worker_group_thread_count: 8
    max_payload_size: 65536
  ssl:
    # Enable/disable SSL support
    enabled: false
    # SSL protocol: See http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#SSLContext
    protocol: TLSv1.2
    # Path to the key store that holds the SSL certificate
    key_store: mqttserver.jks
    # Password used to access the key
    key_store_password: server_ks_password
    # Password used to access the key
    key_password: server_key_password
    # Type of the key store
    key_store_type: JKS

# CoAP server parameters
coap:
  # Enable/disable coap transport protocol.
  enabled: true
  bind_address: 0.0.0.0
  bind_port: 5683
  adaptor: JsonCoapAdaptor
  timeout: 10000


database:
  type: sql # sql OR mongodb

sql:
  # Specify executor service type used to perform timeseries insert tasks: SINGLE FIXED CACHED
  ts_inserts_executor_type: "${SQL_TS_INSERTS_EXECUTOR_TYPE:fixed}"
  # Specify thread pool size for FIXED executor service type
  ts_inserts_fixed_thread_pool_size: "${SQL_TS_INSERTS_FIXED_THREAD_POOL_SIZE:10}"

# spring CORS configuration
spring.mvc.cors:
  mappings:
    # Intercept path
    "/api/auth/**":
      #Comma-separated list of origins to allow. '*' allows all origins. when not set, CORS support is disabled.
      allowed-origins: "*"
      #Comma-separated list of methods to allow. '*' allows all methods
      allowed-methods: "POST,GET,OPTIONS"
      #Comma-separated list of headers to allow in a request. '*' allows all headers.
      allowed-headers: "*"
      #How long, in seconds, the response from a pre-flight request can be cached by clients.
      max-age: "1800"
      #Set whether credentials are supported. when not set, credentials are not supported.
      allow-credentials: "true"
    "/api/v1/**":
      allow-origins: "*"
      allowed-methods: "*"
      allowed-headers: "*"
      max-age: "1800"
      allow-credentials: "true"


spring:
  datasource:
    url: jdbc:postgresql://129.211.104.153:5432/postgres
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: james
  jpa:
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false


quota:
  host:
    # Max allowed number of API requests in interval for single host
    limit: "${QUOTA_HOST_LIMIT:10000}"
    # Interval duration
    intervalMs: "${QUOTA_HOST_INTERVAL_MS:60000}"
    # Maximum silence duration for host after which Host removed from QuotaService. Must be bigger than intervalMs
    ttlMs: "${QUOTA_HOST_TTL_MS:60000}"
    # Interval for scheduled task that cleans expired records. TTL is used for expiring
    cleanPeriodMs: "${QUOTA_HOST_CLEAN_PERIOD_MS:300000}"
    # Enable Host API Limits
    enabled: "${QUOTA_HOST_ENABLED:false}"
    # Array of whitelist hosts
    whitelist: "${QUOTA_HOST_WHITELIST:localhost,127.0.0.1}"
    # Array of blacklist hosts
    blacklist: "${QUOTA_HOST_BLACKLIST:}"
    log:
      topSize: 10
      intervalMin: 2
  rule:
    tenant:
      # Max allowed number of API requests in interval for single tenant
      limit: "${QUOTA_TENANT_LIMIT:100000}"
      # Interval duration
      intervalMs: "${QUOTA_TENANT_INTERVAL_MS:60000}"
      # Maximum silence duration for tenant after which Tenant removed from QuotaService. Must be bigger than intervalMs
      ttlMs: "${QUOTA_TENANT_TTL_MS:60000}"
      # Interval for scheduled task that cleans expired records. TTL is used for expiring
      cleanPeriodMs: "${QUOTA_TENANT_CLEAN_PERIOD_MS:300000}"
      # Enable Host API Limits
      enabled: "${QUOTA_TENANT_ENABLED:false}"
      # Array of whitelist tenants
      whitelist: "${QUOTA_TENANT_WHITELIST:}"
      # Array of blacklist tenants
      blacklist: "${QUOTA_HOST_BLACKLIST:}"
      log:
        topSize: 10
        intervalMin: 268

# Audit log parameters
audit-log:
  # Enable/disable audit log functionality.
  enabled: "${AUDIT_LOG_ENABLED:true}"
  # Specify partitioning size for audit log by tenant id storage. Example MINUTES, HOURS, DAYS, MONTHS
  by_tenant_partitioning: "${AUDIT_LOG_BY_TENANT_PARTITIONING:MONTHS}"
  # Number of days as history period if startTime and endTime are not specified
  default_query_period: "${AUDIT_LOG_DEFAULT_QUERY_PERIOD:30}"
  # Logging levels per each entity type.
  # Allowed values: OFF (disable), W (log write operations), RW (log read and write operations)
  logging-level:
    mask:
      "device": "${AUDIT_LOG_MASK_DEVICE:W}"
      "asset": "${AUDIT_LOG_MASK_ASSET:W}"
      "dashboard": "${AUDIT_LOG_MASK_DASHBOARD:W}"
      "customer": "${AUDIT_LOG_MASK_CUSTOMER:W}"
      "user": "${AUDIT_LOG_MASK_USER:W}"
      "rule_chain": "${AUDIT_LOG_MASK_RULE_CHAIN:W}"
  sink:
    # Type of external sink. possible options: none, elasticsearch
    type: "${AUDIT_LOG_SINK_TYPE:none}"
    # Name of the index where audit logs stored
    # Index name could contain next placeholders (not mandatory):
    # @{TENANT} - substituted by tenant ID
    # @{DATE} - substituted by current date in format provided in audit_log.sink.date_format
    index_pattern: "${AUDIT_LOG_SINK_INDEX_PATTERN:@{TENANT}_AUDIT_LOG_@{DATE}}"
    # Date format. Details of the pattern could be found here:
    # https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html
    date_format: "${AUDIT_LOG_SINK_DATE_FORMAT:YYYY.MM.DD}"
    scheme_name: "${AUDIT_LOG_SINK_SCHEME_NAME:http}" # http or https
    host: "${AUDIT_LOG_SINK_HOST:localhost}"
    port: "${AUDIT_LOG_SINK_POST:9200}"
    user_name: "${AUDIT_LOG_SINK_USER_NAME:}"
    password: "${AUDIT_LOG_SINK_PASSWORD:}"
